using System;
using System.Linq;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;

namespace Client
{
	public class Startup
	{
		// This method gets called by the runtime. Use this method to add services to the container.
		// For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
		public void ConfigureServices(IServiceCollection services)
		{
		}

		// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
		public void Configure(IApplicationBuilder app, IHostingEnvironment env)
		{
			if (env.IsDevelopment())
			{
				app.UseDeveloperExceptionPage();
			}

			app.UseDefaultFiles();
			app.UseStaticFiles(new StaticFileOptions
			{
				OnPrepareResponse = ctx =>
				{
					// The home page (index.html) should have a very low freshness time so any updates to dynamically-
					// generated assets can be picked up immediately by browsers (the index.html file's URLs to the
					// assets will change if they're changed)
					if (string.Equals(ctx.File.Name, "index.html", StringComparison.OrdinalIgnoreCase))
					{
						ctx.Context.Response.Headers.Append("Cache-Control", "public, max-age=60");
					}
					// Cache all these files for a whole year because they're generated by webpack and will have hashes
					// in their file names that change whenever the content changes
					else if (ctx.File.Name.EndsWith(".js", StringComparison.OrdinalIgnoreCase))
					{
						ctx.Context.Response.Headers.Append("Cache-Control", "public, max-age=31536000");
					}
				}
			});
		}
	}
}
